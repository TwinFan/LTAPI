name: Build MacOS / CMake
description: Build a MacOS plugin based on a CMake setup
author: TwinFan

inputs:                       
  baseDir:
    description: "Base folder (under check out dir) to base all build acitivities in, must end with slash if given"
    required: true
    default: ""
  pluginName:
    description: "Plugin's name, used both as top-level folder name and as file name as required by X-Plane"
    required: true
  archFolder:
    description: "Subfolder in which the executable is placed, is based on architecture like 'mac_x64'"
    required: true
    default: mac_x64

outputs:
  xpl-file-name:
    description: Path to the resulting xpl file
    value: ${{ steps.return.outputs.xpl-file-name }}
  pdb-file-name:
    description: Path to the resulting .dSYM.zip file (debug symbol info)
    value: ${{ steps.return.outputs.pdb-file-name }}

runs:
  using: "composite"
  steps:
  - name: Install required libs
    shell: bash
    run: |
      brew install ninja
  - name: Prepare
    shell: bash
    run: |
      mkdir ${{ inputs.baseDir }}build-mac
  - name: CMake
    shell: bash
    run: |
      cd ${{ inputs.baseDir }}build-mac
      pwd
      cmake -G Ninja ..
  - name: Build
    shell: bash
    run: |
      cd ${{ inputs.baseDir }}build-mac
      pwd
      ninja
  - name: Test for Target
    shell: bash
    env:
      TARGET_XPL: ${{ inputs.baseDir }}build-mac/${{ inputs.archFolder }}/${{ inputs.pluginName }}.xpl
    run: |
      if [[ ! -f "$TARGET_XPL" ]]; then
        echo Expected target build not found: "$TARGET_XPL"
        exit 1
      fi
  - name: Extract symbol info
    shell: bash
    env:
      TARGET_XPL: ${{ inputs.baseDir }}build-mac/${{ inputs.archFolder }}/${{ inputs.pluginName }}.xpl
      TARGET_DSYM: ${{ inputs.baseDir }}build-mac/${{ inputs.archFolder }}/${{ inputs.pluginName }}.xpl.dSYM
      TARGET_PDB: ${{ inputs.baseDir }}build-mac/${{ inputs.archFolder }}/${{ inputs.pluginName }}.xpl.dSYM.zip
    run: |
      dsymutil "$TARGET_XPL"
      zip -9r "$TARGET_PDB" "$TARGET_DSYM"
      rm -rf "$TARGET_DSYM"
      strip -S "$TARGET_XPL"
  - name: Return Value
    id: return
    shell: bash
    env:
      TARGET_XPL: ${{ inputs.baseDir }}build-mac/${{ inputs.archFolder }}/${{ inputs.pluginName }}.xpl
      TARGET_PDB: ${{ inputs.baseDir }}build-mac/${{ inputs.archFolder }}/${{ inputs.pluginName }}.xpl.dSYM.zip
    run: |
      echo "xpl-file-name=$(echo $TARGET_XPL)" >> $GITHUB_OUTPUT
      echo "pdb-file-name=$(echo $TARGET_PDB)" >> $GITHUB_OUTPUT
